apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
spec:
  capacity:
    storage: 500Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  hostPath:
    path: /data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: finance
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis
  name: redis
  namespace: finance
spec:
  serviceName: redis-svc
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis/redis-stack
          name: redis
          ports:
            - containerPort: 6379
            - containerPort: 8001
          livenessProbe:
            exec:
              command:
                - "redis-cli"
                - "ping"
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - "redis-cli"
                - "ping"
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 1
            successThreshold: 0
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-svc
  namespace: finance
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
      name: redis
    - port: 8001
      protocol: TCP
      targetPort: 8001
      name: redis-cli
  selector:
    app: redis
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis-ingress
  namespace: finance
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: redis.ada
      http:
          paths:
            - path: /redis
              pathType: Prefix
              backend:
                service:
                  name: redis-svc
                  port:
                    number: 6379
            - path: /redis-cli
              pathType: Prefix
              backend:
                service:
                  name: redis-svc
                  port:
                    number: 8001